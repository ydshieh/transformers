name: Dummy
on:
  pull_request_review:
    types: [submitted]

jobs:
  get-pr-number:
    name: Get PR number
    if: github.event.review.state == 'approved'
    uses: ./.github/workflows/get-pr-number.yml

  show-pr-number:
    runs-on: ubuntu-22.04
    needs: get-pr-number
    steps:
      - run: echo ${{ needs.get-pr-number.outputs.PR_NUMBER }}

  get-pr-info:
    name: Get PR commit SHA
    needs: get-pr-number
    if: ${{ needs.get-pr-number.outputs.PR_NUMBER != ''}}
    uses: ./.github/workflows/get-pr-info.yml
    with:
      pr_number: ${{ needs.get-pr-number.outputs.PR_NUMBER }}

  # TODO: remove part of these for security reason (or use `env`)
  show-pr-sha:
    runs-on: ubuntu-22.04
    needs: get-pr-info
    steps:
      - shell: bash
        run: |
          echo ${{ needs.get-pr-info.outputs.PR_HEAD_REPO_FULL_NAME }}
          echo ${{ needs.get-pr-info.outputs.PR_BASE_REPO_FULL_NAME }}
          echo ${{ needs.get-pr-info.outputs.PR_HEAD_REPO_OWNER }}
          echo ${{ needs.get-pr-info.outputs.PR_BASE_REPO_OWNER }}
          echo ${{ needs.get-pr-info.outputs.PR_HEAD_REPO_NAME }}
          echo ${{ needs.get-pr-info.outputs.PR_BASE_REPO_NAME }}
          echo ${{ needs.get-pr-info.outputs.PR_HEAD_REF }}
          echo ${{ needs.get-pr-info.outputs.PR_BASE_REF }}
          echo ${{ needs.get-pr-info.outputs.PR_HEAD_SHA }}
          echo ${{ needs.get-pr-info.outputs.PR_BASE_SHA }}
          echo ${{ needs.get-pr-info.outputs.PR_MERGE_COMMIT_SHA }}
          echo ${{ needs.get-pr-info.outputs.PR_HEAD_COMMIT_DATE }}
          echo ${{ needs.get-pr-info.outputs.PR_MERGE_COMMIT_DATE }}
          echo ${{ needs.get-pr-info.outputs.PR_HEAD_COMMIT_TIMESTAMP }}
          echo ${{ needs.get-pr-info.outputs.PR_MERGE_COMMIT_TIMESTAMP }}

  verity_pr_commit:
    name: Verity PR commit corresponds to a specific event by comparing timestamps
    runs-on: ubuntu-22.04
    needs: get-pr-info
    env:
      COMMENT_DATE: 2025-06-28T21:02:16Z
      PR_MERGE_COMMIT_DATE: ${{ needs.get-pr-info.outputs.PR_MERGE_COMMIT_DATE }}
      PR_MERGE_COMMIT_TIMESTAMP: ${{ needs.get-pr-info.outputs.PR_MERGE_COMMIT_TIMESTAMP }}
    steps:
      - run: |
          COMMENT_TIMESTAMP=$(date -d "${COMMENT_DATE}" +"%s")
          echo "COMMENT_DATE: $COMMENT_DATE"
          echo "PR_MERGE_COMMIT_DATE: $PR_MERGE_COMMIT_DATE"
          echo "COMMENT_TIMESTAMP: $COMMENT_TIMESTAMP"
          echo "PR_MERGE_COMMIT_TIMESTAMP: $PR_MERGE_COMMIT_TIMESTAMP"
          if [ $COMMENT_TIMESTAMP -le $PR_MERGE_COMMIT_TIMESTAMP ]; then
            echo "Last commit on the pull request is newer than the issue comment triggering this run! Abort!";
            exit -1;
          fi

  # Run on PR review, and issue comment (both on main branch)
  get-jobs:
    name: Get test files to run
    runs-on: ubuntu-22.04
    needs: [get-pr-number, get-pr-info]
    outputs:
      jobs: ${{ steps.get_jobs.outputs.jobs_to_run }}
    steps:
      - name: Get repository content
        id: repo_content
        uses: actions/github-script@v6
        with:
          script: |
            const { data: tests_dir } = await github.rest.repos.getContent({
              owner: '${{ needs.get-pr-info.outputs.PR_HEAD_REPO_OWNER }}',
              repo: '${{ needs.get-pr-info.outputs.PR_HEAD_REPO_NAME }}',
              path: 'tests',
              ref: '${{ needs.get-pr-info.outputs.PR_HEAD_SHA }}',
            });

            const { data: tests_models_dir } = await github.rest.repos.getContent({
              owner: '${{ needs.get-pr-info.outputs.PR_HEAD_REPO_OWNER }}',
              repo: '${{ needs.get-pr-info.outputs.PR_HEAD_REPO_NAME }}',
              path: 'tests/models',
              ref: '${{ needs.get-pr-info.outputs.PR_HEAD_SHA }}',
            });

            const { data: tests_quantization_dir } = await github.rest.repos.getContent({
              owner: '${{ needs.get-pr-info.outputs.PR_HEAD_REPO_OWNER }}',
              repo: '${{ needs.get-pr-info.outputs.PR_HEAD_REPO_NAME }}',
              path: 'tests/quantization',
              ref: '${{ needs.get-pr-info.outputs.PR_HEAD_SHA }}',
            });

            core.setOutput('tests_dir', tests_dir);
            core.setOutput('tests_models_dir', tests_models_dir);
            core.setOutput('tests_quantization_dir', tests_quantization_dir);

#      # TODO: remove this
      # could we avoid checkout?
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
          # TODO: remove this
          # We don't want to checkout to PR branch!
          ref: "refs/pull/${{ needs.get-pr-number.outputs.PR_NUMBER }}/merge"

      - name: Write pr_files file
        run: |
          cat > pr_files.txt << 'EOF'
          ${{ needs.get-pr-info.outputs.PR_FILES }}
          EOF

      - name: Write tests_dir file
        run: |
          cat > tests_dir.txt << 'EOF'
          ${{ steps.repo_content.outputs.tests_dir }}
          EOF

      - name: Write tests_models_dir file
        run: |
          cat > tests_models_dir.txt << 'EOF'
          ${{ steps.repo_content.outputs.tests_models_dir }}
          EOF

      - name: Write tests_quantization_dir file
        run: |
          cat > tests_quantization_dir.txt << 'EOF'
          ${{ steps.repo_content.outputs.tests_quantization_dir }}
          EOF

      - name: Run script to get jobs to run
        id: get_jobs
        run: |
          python utils/get_pr_run_slow_jobs.py | tee output.txt
          echo "jobs_to_run: $(tail -n 1 output.txt)"
          echo "jobs_to_run=$(tail -n 1 output.txt)" >> $GITHUB_OUTPUT

  send_comment:
    name: Send a comment to suggest jobs to run
    # if: ${{ needs.get-tests.outputs.models != '[]'  || needs.get-tests.outputs.quantizations != '[]' }}
    needs: [get-pr-number, get-jobs]
    permissions:
      pull-requests: write
    runs-on: ubuntu-22.04
    steps:
      - name: Send a comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BODY: "\n\n${{ needs.get-jobs.outputs.jobs }}"
        run: |
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            repos/${{ github.repository }}/issues/${{ needs.get-pr-number.outputs.PR_NUMBER }}/comments \
            -f "body=**[For maintainers]** Suggested jobs to run (before merge) ${{ env.BODY }}"